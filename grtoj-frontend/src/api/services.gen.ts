// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
  formDataBodySerializer,
} from "@hey-api/client-axios";
import type {
  CheckUsingGetData,
  CheckUsingGetError,
  CheckUsingGetResponse,
  ReceiveMessageUsingPostError,
  ReceiveMessageUsingPostResponse,
  UploadFileUsingPostData,
  UploadFileUsingPostError,
  UploadFileUsingPostResponse,
  AddPostUsingPostData,
  AddPostUsingPostError,
  AddPostUsingPostResponse,
  DeletePostUsingPostData,
  DeletePostUsingPostError,
  DeletePostUsingPostResponse,
  EditPostUsingPostData,
  EditPostUsingPostError,
  EditPostUsingPostResponse,
  GetPostVoByIdUsingGetData,
  GetPostVoByIdUsingGetError,
  GetPostVoByIdUsingGetResponse,
  ListPostByPageUsingPostData,
  ListPostByPageUsingPostError,
  ListPostByPageUsingPostResponse,
  ListPostVoByPageUsingPostData,
  ListPostVoByPageUsingPostError,
  ListPostVoByPageUsingPostResponse,
  ListMyPostVoByPageUsingPostData,
  ListMyPostVoByPageUsingPostError,
  ListMyPostVoByPageUsingPostResponse,
  SearchPostVoByPageUsingPostData,
  SearchPostVoByPageUsingPostError,
  SearchPostVoByPageUsingPostResponse,
  UpdatePostUsingPostData,
  UpdatePostUsingPostError,
  UpdatePostUsingPostResponse,
  DoPostFavourUsingPostData,
  DoPostFavourUsingPostError,
  DoPostFavourUsingPostResponse,
  ListFavourPostByPageUsingPostData,
  ListFavourPostByPageUsingPostError,
  ListFavourPostByPageUsingPostResponse,
  ListMyFavourPostByPageUsingPostData,
  ListMyFavourPostByPageUsingPostError,
  ListMyFavourPostByPageUsingPostResponse,
  DoThumbUsingPostData,
  DoThumbUsingPostError,
  DoThumbUsingPostResponse,
  SetMenuUsingGetError,
  SetMenuUsingGetResponse,
  AddUserUsingPostData,
  AddUserUsingPostError,
  AddUserUsingPostResponse,
  DeleteUserUsingPostData,
  DeleteUserUsingPostError,
  DeleteUserUsingPostResponse,
  GetUserByIdUsingGetData,
  GetUserByIdUsingGetError,
  GetUserByIdUsingGetResponse,
  GetLoginUserUsingGetError,
  GetLoginUserUsingGetResponse,
  GetUserVoByIdUsingGetData,
  GetUserVoByIdUsingGetError,
  GetUserVoByIdUsingGetResponse,
  ListUserByPageUsingPostData,
  ListUserByPageUsingPostError,
  ListUserByPageUsingPostResponse,
  ListUserVoByPageUsingPostData,
  ListUserVoByPageUsingPostError,
  ListUserVoByPageUsingPostResponse,
  UserLoginUsingPostData,
  UserLoginUsingPostError,
  UserLoginUsingPostResponse,
  UserLoginByWxOpenUsingGetData,
  UserLoginByWxOpenUsingGetError,
  UserLoginByWxOpenUsingGetResponse,
  UserLogoutUsingPostError,
  UserLogoutUsingPostResponse,
  UserRegisterUsingPostData,
  UserRegisterUsingPostError,
  UserRegisterUsingPostResponse,
  UpdateUserUsingPostData,
  UpdateUserUsingPostError,
  UpdateUserUsingPostResponse,
  UpdateMyUserUsingPostData,
  UpdateMyUserUsingPostError,
  UpdateMyUserUsingPostResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * check
 */
export const checkUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<CheckUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    CheckUsingGetResponse,
    CheckUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/",
  });
};

/**
 * receiveMessage
 */
export const receiveMessageUsingPost = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReceiveMessageUsingPostResponse,
    ReceiveMessageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/",
  });
};

/**
 * uploadFile
 */
export const uploadFileUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UploadFileUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UploadFileUsingPostResponse,
    UploadFileUsingPostError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
    url: "/api/file/upload",
  });
};

/**
 * addPost
 */
export const addPostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<AddPostUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    AddPostUsingPostResponse,
    AddPostUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/add",
  });
};

/**
 * deletePost
 */
export const deletePostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DeletePostUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    DeletePostUsingPostResponse,
    DeletePostUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/delete",
  });
};

/**
 * editPost
 */
export const editPostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<EditPostUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    EditPostUsingPostResponse,
    EditPostUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/edit",
  });
};

/**
 * getPostVOById
 */
export const getPostVoByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetPostVoByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetPostVoByIdUsingGetResponse,
    GetPostVoByIdUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/get/vo",
  });
};

/**
 * listPostByPage
 */
export const listPostByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListPostByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListPostByPageUsingPostResponse,
    ListPostByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/list/page",
  });
};

/**
 * listPostVOByPage
 */
export const listPostVoByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListPostVoByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListPostVoByPageUsingPostResponse,
    ListPostVoByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/list/page/vo",
  });
};

/**
 * listMyPostVOByPage
 */
export const listMyPostVoByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListMyPostVoByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListMyPostVoByPageUsingPostResponse,
    ListMyPostVoByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/my/list/page/vo",
  });
};

/**
 * searchPostVOByPage
 */
export const searchPostVoByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<SearchPostVoByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    SearchPostVoByPageUsingPostResponse,
    SearchPostVoByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/search/page/vo",
  });
};

/**
 * updatePost
 */
export const updatePostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdatePostUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UpdatePostUsingPostResponse,
    UpdatePostUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post/update",
  });
};

/**
 * doPostFavour
 */
export const doPostFavourUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DoPostFavourUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    DoPostFavourUsingPostResponse,
    DoPostFavourUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post_favour/",
  });
};

/**
 * listFavourPostByPage
 */
export const listFavourPostByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListFavourPostByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListFavourPostByPageUsingPostResponse,
    ListFavourPostByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post_favour/list/page",
  });
};

/**
 * listMyFavourPostByPage
 */
export const listMyFavourPostByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListMyFavourPostByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListMyFavourPostByPageUsingPostResponse,
    ListMyFavourPostByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post_favour/my/list/page",
  });
};

/**
 * doThumb
 */
export const doThumbUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DoThumbUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    DoThumbUsingPostResponse,
    DoThumbUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/post_thumb/",
  });
};

/**
 * setMenu
 */
export const setMenuUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    SetMenuUsingGetResponse,
    SetMenuUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/setMenu",
  });
};

/**
 * addUser
 */
export const addUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<AddUserUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    AddUserUsingPostResponse,
    AddUserUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/add",
  });
};

/**
 * deleteUser
 */
export const deleteUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DeleteUserUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    DeleteUserUsingPostResponse,
    DeleteUserUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/delete",
  });
};

/**
 * getUserById
 */
export const getUserByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetUserByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetUserByIdUsingGetResponse,
    GetUserByIdUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/get",
  });
};

/**
 * getLoginUser
 */
export const getLoginUserUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetLoginUserUsingGetResponse,
    GetLoginUserUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/get/login",
  });
};

/**
 * getUserVOById
 */
export const getUserVoByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetUserVoByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetUserVoByIdUsingGetResponse,
    GetUserVoByIdUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/get/vo",
  });
};

/**
 * listUserByPage
 */
export const listUserByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListUserByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListUserByPageUsingPostResponse,
    ListUserByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/list/page",
  });
};

/**
 * listUserVOByPage
 */
export const listUserVoByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListUserVoByPageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ListUserVoByPageUsingPostResponse,
    ListUserVoByPageUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/list/page/vo",
  });
};

/**
 * userLogin
 */
export const userLoginUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UserLoginUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UserLoginUsingPostResponse,
    UserLoginUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/login",
  });
};

/**
 * userLoginByWxOpen
 */
export const userLoginByWxOpenUsingGet = <ThrowOnError extends boolean = false>(
  options: Options<UserLoginByWxOpenUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    UserLoginByWxOpenUsingGetResponse,
    UserLoginByWxOpenUsingGetError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/login/wx_open",
  });
};

/**
 * userLogout
 */
export const userLogoutUsingPost = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UserLogoutUsingPostResponse,
    UserLogoutUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/logout",
  });
};

/**
 * userRegister
 */
export const userRegisterUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UserRegisterUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UserRegisterUsingPostResponse,
    UserRegisterUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/register",
  });
};

/**
 * updateUser
 */
export const updateUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdateUserUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UpdateUserUsingPostResponse,
    UpdateUserUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/update",
  });
};

/**
 * updateMyUser
 */
export const updateMyUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdateMyUserUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UpdateMyUserUsingPostResponse,
    UpdateMyUserUsingPostError,
    ThrowOnError
  >({
    ...options,
    url: "/api/user/update/my",
  });
};
